# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ejc0oaEaw0f1pijZUdP60mS2mCWpLv9Z
"""

# =============================
# 1️⃣ Setup and constants
# =============================
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import quad

# Updated 2025 SFT baseline constants
H0_km = 68.05                              # km/s/Mpc
H0 = H0_km * 1000 / (3.085677581e22)       # s^-1
c = 2.99792458e8                           # m/s
G = 6.67430e-11                            # m^3/kg/s^2
M_m = 9.74010e53                           # kg
R_c = 1.44663e27                           # m
R_0 = 4.39448e26                           # m
Omega_m0 = 0.31500
Omega_r0 = 9.03400e-5
Omega_DE0 = 0.68491
rho_DE0 = 5.95765e-27                      # kg/m^3

# =============================
# 2️⃣ Define H(a)
# =============================
def H_LCDM(a):
    """Standard H(a) including radiation and dark energy."""
    return H0 * np.sqrt(Omega_m0*a**-3 + Omega_r0*a**-4 + Omega_DE0)

# =============================
# 3️⃣ Compute integrand curves
# =============================
a_vals = np.logspace(-6, 0, 500)
integrand_with_r = 1 / (a_vals * H_LCDM(a_vals))
integrand_no_r = 1 / (a_vals * (H0 * np.sqrt(Omega_m0*a_vals**-3 + Omega_DE0)))

# =============================
# 4️⃣ Plot Figure A1
# =============================
plt.figure(figsize=(7,5))
plt.loglog(a_vals, integrand_with_r/H0, label="With radiation")
plt.loglog(a_vals, integrand_no_r/H0, '--', label="No radiation")
plt.xlabel("Scale factor $a$")
plt.ylabel(r"Integrand $1/(aH(a))$ (normalized to $H_0^{-1}$)")
plt.legend()
plt.grid(True, which='both', ls=':')
plt.title("Integrand of the cosmic age $t_0$")
plt.tight_layout()
plt.show()

def integrand_R0(a):
    return c / (a**2 * H_LCDM(a))

a_vals = np.logspace(-6, 0, 800)
cum_R = [quad(integrand_R0, 1e-6, a)[0] for a in a_vals]
cum_R = np.array(cum_R)

plt.figure(figsize=(7,5))
plt.semilogx(a_vals, cum_R/cum_R[-1])
plt.xlabel("Scale factor $a$")
plt.ylabel(r"Cumulative fraction $R(<a)/R_0$")
plt.title("Cumulative contribution to the comoving horizon $R_0$")
plt.grid(True, ls=':')
plt.tight_layout()
plt.show()

from scipy.integrate import cumulative_trapezoid

def E_SFT(z, alpha):
    a = 1/(1+z)
    return np.sqrt(Omega_m0*(1+z)**3 + Omega_r0*(1+z)**4 +
                   Omega_DE0*a**(3*(1-alpha)))

def dL(z, alpha):
    zarr = np.linspace(0, z, 400)
    Ez = E_SFT(zarr, alpha)
    integral = cumulative_trapezoid(1/Ez, zarr, initial=0)
    return (1+z)*c/H0 * integral[-1]

z_vals = np.linspace(0, 4, 100)
alphas = [0.97, 0.99, 1.01, 1.02]
mu_LCDM = 5*np.log10([dL(z, 1) for z in z_vals]) + 25

plt.figure(figsize=(7,5))
for alpha in alphas:
    mu_SFT = 5*np.log10([dL(z, alpha) for z in z_vals]) + 25
    dmu = mu_SFT - mu_LCDM
    plt.plot(z_vals, dmu, label=f"$\\alpha={alpha}$")

plt.axhline(0, color='gray', ls='--')
plt.xlabel("Redshift $z$")
plt.ylabel(r"$\Delta\mu(z)$ [mag]")
plt.title("Predicted SN residuals $\Delta\mu(z)$ for SFT relative to $\Lambda$CDM")
plt.legend()
plt.grid(True, ls=':')
plt.tight_layout()
plt.show()